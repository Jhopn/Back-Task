// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  INCOMPLETO
  COMPLETO
}

model User {
  id        String     @id @default(uuid())
  username  String
  email     String     @unique
  password  String
  avatar    String?
  Tasks    Tasks[]
  UserAccess UserAccess[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserAccess {
  id        String   @id @default(uuid())
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
  Access    Access?  @relation(fields: [accessId], references: [id])
  accessId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Access {
  id         String       @id @default(uuid())
  name       String       @unique
  userAccess UserAccess[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}


model Tasks {
  id        String     @id @default(uuid())
  title  String
  description     String    
  dueDate  String
  status TaskStatus @default(INCOMPLETO)
  userId    String   
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}